// import { useEffect, useState } from "react"
// import "./EmployerProfile.css";
// import useAuthStore from "../../../store/useAuthStore"

// const EmployerProfile = () => {
//     const { user: employer, updateEmployer, sendJoinCompanyRequest, cancelJoinCompanyRequest, getEmployerProfile } = useAuthStore(); 
//     const [isEditing, setIsEditing] = useState(false);
//     // ‚úÖ –û–±—ä–µ–¥–∏–Ω—è–µ–º `company_regnum` –∏ `pinned_message` –≤ `companyJoinData`
//     const [companyJoinData, setCompanyJoinData] = useState({
//         company_regnum: "",
//         pinned_message: "",
//     });
//     const [isRequestSent, setIsRequestSent] = useState(false); // ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ª–∏ –∑–∞–ø—Ä–æ—Å
    
//     const [editedData, setEditedData] = useState({        
//         contacts: {
//             phone: employer.user.contacts.phone || "",
//             email: employer.user.contacts.email || "",
//         },
//         name: employer.user.name || "",
//     });

//     const [company, setCompany] = useState({
//         company_regnum: '',
//         description: '',
//         name: ''
//     })

//     const fetchCompany = async () => {
//         const profile = await getEmployerProfile()
//         console.log(profile);
        
//         if(profile.company.company_regnum){
//             const response = await fetch(`https://egr.gov.by/api/v2/egr/getShortInfoByRegNum/${profile.company.company_regnum}`,
//                 {
//                     method: 'GET',
//                 }
//             )
//             const result = await response.json()
//             console.log(result[0]);
//             const company = {
//                 company_regnum: result[0].ngrn,
//                 //description: result[0].nsi00114,
//                 name: result[0].vfn
//             }
//             setCompany(company)
//         }else{
//             setIsRequestSent(!!profile.requested_company)
//             const company = {
//                 requested_company: profile.requested_company
//             }
//             setCompany(company)
            
//         }
//     }

//     useEffect(() => {                
//         fetchCompany()
//     }, [])
    
//     if (!employer || employer.role !== "employer") {
//         return <p>–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º</p>;
//     }

//     const handleChange = (e) => {
//         const { name, value } = e.target;

//         setEditedData((prevData) => {
//             const updatedData = { ...prevData };
    
//             if (name.startsWith("contacts.")) {
//                 updatedData.contacts = {
//                     ...prevData.contacts,
//                     [name.replace("contacts.", "")]: value
//                 };
//             } else {
//                 updatedData[name] = value;
//             }
    
//             return updatedData;
//         });
//     };

//     const handleSave = () => {
//         updateEmployer(editedData);
//         setIsEditing(false);
//     };

//     const handleCancel = () => {
//         setEditedData({
//             contacts: {
//                 phone: employer.user.contacts.phone || "",
//                 email: employer.user.contacts.email || "",
//             },
//             name: employer.user.name || "",
//         }); 
//         setIsEditing(false); 
//     };
    
//     const handleJoinChange = (e) => {
//         setCompanyJoinData({ ...companyJoinData, [e.target.name]: e.target.value });
//         //setCompany(companyJoinData)
//     };

//     const handleJoinCompany = async () => {
//         const success = await sendJoinCompanyRequest(companyJoinData); // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–∞ –ø–æ–ª—è
//         console.log(success);
        
//         if(success){
//             setIsRequestSent(true); // ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º `true`, —á—Ç–æ–±—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—è

//         } 
//     };

//     const handleCancelRequest = () => {
//         cancelJoinCompanyRequest(companyJoinData.company_regnum);
//         setCompanyJoinData({ company_regnum: "", pinned_message: "" }); // ‚úÖ –û—á–∏—â–∞–µ–º –ø–æ–ª—è
//         setIsRequestSent(false); // ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ—Ä–º—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
//     };

//     return (
//         <div className="profile-container">
//             <div className="profile-data">
//                 <div className="profile-section">
//                     <h2>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
//                     {isEditing ? (
//                         <input type="text" name="name" value={editedData.name} onChange={handleChange} />
//                     ) : (
//                         <p><strong>–ò–º—è:</strong> {employer.user.name}</p>
//                     )}
//                     <p><strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {new Date(employer.user.createdAt).toLocaleDateString()}</p>
//                 </div>

//                 {/* üîπ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
//                 <div className="profile-section">
//                     <h2>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
//                     {isEditing ? (
//                         <>
//                             <input type="text" name="contacts.email" value={editedData.contacts.email} onChange={handleChange} />
//                             <input type="text" name="contacts.phone" value={editedData.contacts.phone} onChange={handleChange} />
//                         </>
//                     ) : (
//                         <>
//                             <p><strong>Email:</strong> {employer.user.contacts.email}</p>
//                             <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {employer.user.contacts.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
//                         </>
//                     )}
//                 </div>
//             </div>
//                 {/* üîπ –ë–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–º–ø–∞–Ω–∏–∏ */}
//                 <div className="profile-company">
//                     <h2>–ö–æ–º–ø–∞–Ω–∏—è</h2>
//                     {company.company_regnum ? (
//                         <>
//                             <p><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä:</strong> {company.company_regnum || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
//                             <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {company.name}</p>
//                             <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {company.description || "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"}</p>
//                         </>
//                     ) : isRequestSent ? (
//                         <div className="company-join">
//                             <p>–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ —Å –£–ù–ü {companyJoinData.company_regnum}</p>
//                             <button className="cancel-button" onClick={handleCancelRequest}>–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</button>
//                         </div>
//                         ) : (
//                         <div className="company-join">
//                             <p>–í—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–æ–º–ø–∞–Ω–∏–∏. –í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:</p>
//                             <input 
//                                 type="text" 
//                                 name="company_regnum" 
//                                 placeholder="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏" 
//                                 value={companyJoinData.company_regnum} 
//                                 onChange={handleJoinChange} 
//                             />
//                             <textarea 
//                                 name="pinned_message"
//                                 placeholder="–î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∑–∞–ø—Ä–æ—Å—É..." 
//                                 value={companyJoinData.pinned_message} 
//                                 onChange={handleJoinChange} 
//                             ></textarea>
//                             <button className="join-button" onClick={handleJoinCompany}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</button>
//                             {/* {isRequestSent ? 
//                                 ( <button className="cancel-button" onClick={handleCancelRequest}>–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</button> ) 
//                                 : 
//                                 ( <button className="join-button" onClick={handleJoinCompany}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</button> )
//                             } */}
//                         </div>
//                     )}
//                 </div>
            
//             {/* üîπ –ö–Ω–æ–ø–∫–∏ */}
//             <div className="profile-actions">
//                 {isEditing ? (
//                     <>
//                         <button className="save-button" onClick={handleSave}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
//                         <button className="cancel-button" onClick={handleCancel}>–û—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
//                     </>
//                 ) : (
//                     <button className="edit-button" onClick={() => setIsEditing(true)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</button>
//                 )}
//             </div>
//         </div>
//     );
// };

// export default EmployerProfile;
import { useEffect, useState } from "react";
import "./EmployerProfile.css";
import useEmployerStore from "../../../store/useEmployerStore";
import useAuthStore from "../../../store/useAuthStore";
import EditProfileModal from "../EditProfileModal/EditProfileModal";

const EmployerProfile = () => {
    const { sendJoinCompanyRequest, cancelJoinCompanyRequest, leaveCompany } = useEmployerStore()
    const { token } = useAuthStore();

    const employer = useEmployerStore((state) => state.employer);
    const fetchEmployerProfile = useEmployerStore((state) => state.fetchEmployerProfile);

    useEffect(() => {
        if(token){
            fetchEmployerProfile()                
        }
    }, [token, fetchEmployerProfile])

    useEffect(() => {
        console.log("employer –æ–±–Ω–æ–≤–∏–ª—Å—è:", employer);
    }, [employer]);

    const [companyJoinData, setCompanyJoinData] = useState({
        company_regnum: "",
        pinned_message: "",
    });
    const [isRequestSent, setIsRequestSent] = useState(false);
    const [requestedCompany, setRequestedCompany] = useState(""); 
    const [isModalOpen, setIsModalOpen] = useState(false); // ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

    const handleOpenModal = () => {
        setIsModalOpen(true)
    }

    const handleCloseModal = () => {
        fetchEmployerProfile()        
        setIsModalOpen(false)
    }

    const handleJoinChange = (e) => {
        setCompanyJoinData({ ...companyJoinData, [e.target.name]: e.target.value });
    };

    const handleJoinCompany = async () => {
        const success = await sendJoinCompanyRequest(companyJoinData);

        if (success) {
            setIsRequestSent(true);
            setRequestedCompany(companyJoinData.company_regnum); // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –£–ù–ü –∫–æ–º–ø–∞–Ω–∏–∏, –∫ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å
        }
    };

    const handleCancelRequest = async () => {        
        if(await cancelJoinCompanyRequest()){
            setCompanyJoinData({ company_regnum: "", pinned_message: "" });
            setIsRequestSent(false);
            setRequestedCompany(""); // ‚úÖ –û—á–∏—â–∞–µ–º –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞
        }
    };

    const handleLeaveCompany = () => {
        leaveCompany()
    }


    return (
        <div className="employer-profile-container">
            <h2>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
            <div className="profile-info">
                {employer?.user?.name ? (
                    <>
                        <div className="container">
                            <div>
                                <p><strong>–ò–º—è:</strong> {employer.user.name}</p>
                                <p><strong>–°–æ–∑–¥–∞–Ω:{new Date(employer.user.createdAt).toLocaleDateString()}</strong></p>
                            </div>
                            <div>
                                <p><strong>Email:</strong> {employer.user.contacts?.email}</p>
                                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {employer.user.contacts?.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
                            </div>
                        </div>
                        {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
                        <div className="profile-actions">
                            <button className="edit-button" onClick={handleOpenModal}
                            >–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        </div>
                    </>
                ) : (
                    <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p> // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
                )}
            </div>


            {/* –í—Å—Ç–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
            <EditProfileModal 
                isOpen={isModalOpen} 
                onClose={handleCloseModal} 
                //profileData={applicant}
                />

            <h2>–ö–æ–º–ø–∞–Ω–∏—è</h2>
            {employer.company ? (
                <div className="company-info">
                    <p><strong>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä:</strong> {employer.company.company_regnum}</p>
                    <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {employer.company.name}</p>
                    <p><strong>–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> {employer.company.activity}</p>
                    <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞</h3>
                    <p><strong>Email:</strong> {employer.company.boss_contacts.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
                    <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {employer.company.boss_contacts.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
                    <button className="leave-button" onClick={handleLeaveCompany}>–£–π—Ç–∏ –∏–∑ –∫–æ–º–ø–∞–Ω–∏–∏</button>
                </div>
            ) : (
                employer.requested_company ? (
                    <div className="company-join">
                        <p>–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ —Å –£–ù–ü {employer.requested_company}</p>
                        <button className="cancel-button" onClick={handleCancelRequest}>–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</button>
                    </div>
                ) : (
                    <div className="company-join">
                        {isRequestSent ? (
                            <>
                                <p>–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ —Å –£–ù–ü {requestedCompany}</p>
                                <button className="cancel-button" onClick={handleCancelRequest}>–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</button>
                            </>
                        ) : (
                            <>
                                <p>–í—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–æ–º–ø–∞–Ω–∏–∏. –í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:</p>
                                <input 
                                    type="text" 
                                    name="company_regnum" 
                                    placeholder="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏" 
                                    value={companyJoinData.company_regnum} 
                                    onChange={handleJoinChange} 
                                    disabled={isRequestSent} 
                                />
                                <textarea 
                                    name="pinned_message"
                                    placeholder="–î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∑–∞–ø—Ä–æ—Å—É..." 
                                    value={companyJoinData.pinned_message} 
                                    onChange={handleJoinChange} 
                                    disabled={isRequestSent} 
                                ></textarea>
                                <button className="join-button" onClick={handleJoinCompany}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</button>
                            </>
                        )}
                    </div>
                )
            )}
        </div>
    );
};

export default EmployerProfile;
